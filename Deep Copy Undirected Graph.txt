/*
* class GraphNode {
*   public int key;
*   public List<GraphNode> neighbors;
*   public GraphNode(int key) {
*     this.key = key;
*     this.neighbors = new ArrayList<GraphNode>();
*   }
* }
*/
public class Solution {
  
  
  public List<GraphNode> copy(List<GraphNode> graph) {
    // Write your solution here.
    if(graph == null){
      return null;
    }
    
    Map<GraphNode, GraphNode> map = new HashMap<>();
    List<GraphNode> res = new ArrayList<>();
    
    for(GraphNode gn : graph){
      GraphNode newGn = new GraphNode(gn.key);
      map.put(gn, newGn);
      res.add(newGn);
    }
    map.put(null, null);
    for(GraphNode gn : graph){
      GraphNode newGn = map.get(gn);
      for(GraphNode neighborGn : gn.neighbors){
        newGn.neighbors.add(map.get(neighborGn));
      }
    }
    
    return res;
    
  }
}
